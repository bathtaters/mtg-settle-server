/* Base styling */
:root {
  --universal-margin: 0.5rem;
  --a-link-color: #0CF;
  --a-visited-color: #4AD;
}

/* html { overflow-x: hidden; } */

html, body {
  height: 100%;
  width: 100%;
  min-width: 300px;
}

/* Fix table styling */
table:not(.horizontal) thead, table:not(.horizontal) tbody {
  max-width: 99%;
}
table:not(.horizontal) { max-height: 424px; }
table:not(.horizontal) thead { position: sticky; }
tr.tableRow { cursor: pointer; }
td { overflow-wrap: anywhere; }

/* Fix lone card styling */
.card.center { margin: auto; }

/* Remove form styling */
form.plain, .card.plain {
  background: none;
  border: 0;
}
form.plain fieldset { background: var(--form-back-color); }

/* Fix checkbox alignment */
.input-group > input[type='checkbox'] { vertical-align: bottom; }

/* Fix collapse styling */
.collapse > label.row { display: flex; height: auto; }
.collapse > [type="checkbox"] { position: initial; display: none; }

/* Fix tooltips on disabled */
.tooltip[disabled]:hover::after,
.tooltip[disabled]:hover::before {
  display: none;
}

/* Fix button styling */
button, .button, [role="button"],
[type="button"], [type="submit"], [type="reset"] {
  text-align: center;
}
.button-group > .center { align-self: center; }
.button-group { margin-top: 1em; margin-bottom: 1em; }

/* Fix disabled buttons */
input[type="button"]:disabled:hover, input[type="submit"]:disabled:hover,
input[type="reset"]:disabled:hover, button:disabled:hover,
a.button:not([href]):hover, a.button[disabled]:hover {
  background-color: var(--button-back-color);
  background: var(--button-back-color);
}
input[type="button"]:disabled, input[type="submit"]:disabled,
input[type="reset"]:disabled, button:disabled,
a.button:not([href]), a.button[disabled] {
  background-color: var(--button-back-color);
  background: var(--button-back-color);
  opacity: 0.5;
}

/* Fix header alignment */
header { display: flex; }
header > .spacer { flex-grow: 1; }

/* Fix row alignment */
.row.baseline { align-items: baseline; }
.row.center { justify-content: center; }
.row.nowrap { flex-wrap: nowrap; }
.row > .center { align-self: center; }

/* Fix footer styling */
footer > .row {
  justify-content: center;
  text-align: center;
}
@media screen and (max-width: 767px) { footer p { font-size: 0.8em; } }
footer a:link { color: var(--footer-link-color); }


/* Add missing input types */
input { color-scheme: dark; }
/* [type="file"], [type="image"], */
[type="color"], [type="date"], [type="datetime-local"],
[type="month"], [type="range"], [type="time"], [type="week"] {
  box-sizing: border-box;
  background: var(--input-back-color);
  color: var(--input-fore-color);
  border: 0.0625rem solid var(--input-border-color);
  border-radius: var(--universal-border-radius);
  margin: calc(var(--universal-margin) / 2);
  padding: var(--universal-padding) calc(1.5 * var(--universal-padding));
}

/* Fix invalid input fields */
input.invalid:not([type="button"]):not([type="submit"]):not([type="reset"]),
input.invalid:not([type="button"]):not([type="submit"]):not([type="reset"]):focus,
input.invalid:not([type="button"]):not([type="submit"]):not([type="reset"]):focus-visible,
textarea.invalid, textarea.invalid:focus, textarea.invalid:focus-visible, select.invalid,
input:invalid:not([type="button"]):not([type="submit"]):not([type="reset"]),
input:invalid:not([type="button"]):not([type="submit"]):not([type="reset"]):focus,
input:invalid:not([type="button"]):not([type="submit"]):not([type="reset"]):focus-visible,
textarea:invalid, textarea:invalid:focus, textarea:invalid:focus-visible, select:invalid {
  border-color: #d32f2f;
  outline-color: #d32f2f;
  box-shadow: none;
}

/* Fix 'buttonInput' mixin */
.button-group > .input-group { display: flex; }
.button-input > .button-group > input:not([type="button"]):not([type="submit"]):not([type="reset"]),
.button-input > .button-group > textarea, .button-input > .button-group > select,
.button-input > .button-group > :only-child {
  flex-grow: 1;
  margin: 0;
}

.button-input > .button-group > input[type="button"]:not(:only-child),
.button-input > .button-group > input[type="submit"]:not(:only-child),
.button-input > .button-group > input[type="reset"]:not(:only-child),
.button-input > .button-group > button:not(:only-child) {
  max-width: max-content;
}
@media screen and (max-width: 767px) {
  .button-input > .button-group > input[type="button"]:not(:only-child),
  .button-input > .button-group > input[type="submit"]:not(:only-child),
  .button-input > .button-group > input[type="reset"]:not(:only-child),
  .button-input > .button-group > button {
    max-width: initial;
  }
}

/* Add 'visible' classes (AKA show content based on screen size) */
.hidden.visible-sm, .hidden.visible-md, .hidden.visible-lg { display: initial !important; }
@media screen and (max-width: 767px)  { .visible-md, .hidden.visible-md { display: none !important; } }
@media screen and (min-width: 768px)  { .visible-sm, .hidden.visible-sm { display: none !important; } }
@media screen and (max-width: 1279px) { .visible-lg, .hidden.visible-lg { display: none !important; } }
@media screen and (min-width: 1280px) { .visible-md, .hidden.visible-md { display: none !important; } }